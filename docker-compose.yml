version: '3.7'

services:

    redpanda:
        image: docker.redpanda.com/redpandadata/console
        hostname: redpanda
        container_name: redpanda
        ports:
            - "8080:8080"
        environment:
            KAFKA_BROKERS: kafka:29092
            KAFKA_TLS_INSECURESKIPTLSVERIFY: true
            KAFKA_SCHEMAREGISTRY_ENABLED: true
            KAFKA_SCHEMAREGISTRY_URLS: http://schema-registry:8081
            KAFKA_SCHEMAREGISTRY_USERNAME: client
            KAFKA_SCHEMAREGISTRY_PASSWORD: client
            KAFKA_SCHEMAREGISTRY_TLS_ENABLED: false
            KAFKA_SCHEMAREGISTRY_TLS_INSECURESKIPTLSVERIFY: true
        depends_on:
            - kafka
            - schema-registry
            - zookeeper
        restart: always

    zookeeper:
        image: confluentinc/cp-zookeeper:6.1.1
        hostname: zookeeper
        container_name: zookeeper
        ports:
            - "2181:2181"
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000
        restart: always

    kafka:
        image: confluentinc/cp-enterprise-kafka:6.1.1
        hostname: kafka
        container_name: kafka
        tmpfs: /kafka/kafka-logs
        depends_on:
            - zookeeper
        ports:
            - "9092:9092"
        environment:
            KAFKA_HEAP_OPTS: -Xmx3G -Xms1G
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
            KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
            KAFKA_DELETE_TOPIC_ENABLE: "true"
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
            KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
            KAFKA_LOG_RETENTION_MS: -1
            KAFKA_MESSAGE_MAX_BYTES: 10485880
            KAFKA_NUM_PARTITIONS: 1
            CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka:9092
            CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
            CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
            CONFLUENT_METRICS_ENABLE: "true"
            CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        restart: always

    schema-registry:
        image: confluentinc/cp-schema-registry:6.1.1
        container_name: schema-registry
        ports:
            - "8081:8081"
        environment:
            SCHEMA_REGISTRY_HOST_NAME: schema-registry
            SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181
            SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8081
        depends_on:
            - kafka
        restart: always
    
    #enviador-valoraciones:
      #  build: ./enviador-valoraciones
      #  container_name: enviador-valoraciones
      # restart: always
      #  ports:
      #  - "8083:8083"
      #  environment:
      #  - "kafka=kafka"
      #  - "schema-registry=schema-registry"
         
    aplicador-valoraciones-db:
        image: postgres
        container_name: "aplicador-valoraciones-db"
        ports:
          - "5432:5432"
        environment:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: admin
          POSTGRES_DB: aplicador-valoraciones-db
                
    consultador-peliculas-db:
        image: postgres
        container_name: "consultador-peliculas-db"
        ports:
          - "5433:5433"
        environment:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: admin
          POSTGRES_DB: consultador-peliculas-db
     
    pgadmin:
        container_name: pgadmin
        image: dpage/pgadmin4
        environment:
         PGADMIN_DEFAULT_EMAIL: "admin@admin.com"
         PGADMIN_DEFAULT_PASSWORD: "admin"
        ports:
         - "8082:8082"
        depends_on:
         - aplicador-valoraciones-db
         - consultador-peliculas-db
        